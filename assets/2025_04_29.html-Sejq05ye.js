import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as i,a as e,d as a,e as h,w as k,r as p,o as r}from"./app-CM1hd37A.js";const d={};function o(c,s){const n=p("RouteLink");return r(),l("div",null,[s[2]||(s[2]=i("h2",{id:"简介",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#简介"},[i("span",null,"简介")])],-1)),i("p",null,[s[1]||(s[1]=a("有关 launch 文件的介绍，可以参考",-1)),h(n,{to:"/learningNote/Ros2_Note/launch_rosbag2/2025_04_28.html#%E7%AE%80%E4%BB%8B"},{default:k(()=>[...s[0]||(s[0]=[a("上一篇内容",-1)])]),_:1})]),s[3]||(s[3]=e(`<h2 id="壹、python-实现语法" tabindex="-1"><a class="header-anchor" href="#壹、python-实现语法"><span>壹、Python 实现语法</span></a></h2><p>以下介绍在 Python 中 <strong>launch 文件</strong> 的相关语法：</p><h3 id="_1-node-节点设置" tabindex="-1"><a class="header-anchor" href="#_1-node-节点设置"><span>1. Node-节点设置</span></a></h3><p>在 <strong>使用 Python 实现的 launch 文件</strong> 中，被执行的节点需要统一封装为 <code>launch_ros.actions.Node</code> 对象，并通过 <code>LaunchDescription()</code> 函数创建特定包装对象以进行返回。以下将会针对统一封装的 <code>Node</code> 对象内的参数进行逐一说明。</p><p>假设该launch文件所在功能包名为 “package_for_launch_01”，该 launch 文件编写如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> launch </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> LaunchDescription</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> launch_ros.actions </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取功能包下 share 目录路径------</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ament_index_python.packages </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> get_package_share_directory</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> generate_launch_description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 节点配置示例</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    turtle1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 可执行程序</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        executable</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;turtlesim_node&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 包名</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        package</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;turtlesim&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 设置节点是否会自动重启 (这里设置为True)</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        respawn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 覆盖节点名称</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 设置命名空间</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        namespace</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/robot1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 进程显示名称（在ps/top中可见）</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        exec_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;turtle_sim&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 参数配置</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;background_r&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;background_g&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;background_b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 字典传参</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_package_share_directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;package_for_launch_01&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;config&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;custom_params.yaml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># YAML文件传参 (常用，建议采用)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">         </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 重映射配置</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        remappings</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/turtle1/cmd_vel&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/robot1/cmd_vel&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 话题重映射</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/turtle1/pose&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/robot1/pose&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # ROS专用参数</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        ros_arguments</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--log-level&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;debug&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置日志级别</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--ros-args&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-p&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;use_sim_time:=true&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 覆盖参数（需显式添加--ros-args）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 普通命令行参数</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">        arguments</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--custom-flag&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 自定义标志</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--config&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/path/to/non_ros_config.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> LaunchDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([turtle1])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><ul><li>executable：可执行程序</li><li>package：被执行程序所属功能包的名称</li><li>respawn：设置节点是否会自动重启 (针对特殊节点，如需要在出现异常被关闭之后自动重启的节点，可以使用)</li><li>name：设置节点名称，可以用于解决重名问题</li><li>namespace：设置命名空间，可以用于解决重名问题</li><li>exec_name：设置程序运行时命令行左侧所显示的对应标签</li><li>remappings：用于实现话题重映射</li><li>parameters</li><li>ros_arguments</li><li>arguments</li></ul><div class="hint-container info"><p class="hint-container-title">&quot;parameters&quot;/&quot;ros_arguments&quot;/&quot;arguments&quot;之间的区别</p><p>在上述创建 <code>Node</code> 对象的初始函数中，有以下三个名称中包含“参数”意思的参数，它们的意思分别为：</p><ul><li><strong>parameters</strong>：节点在运行时，<strong>其自身</strong>需要读取的参数，可以理解为类似给 <strong>一般调用函数</strong> 所传入的 “参数”</li><li><strong>ros_arguments</strong>：节点在运行时，<strong>ROS2底层系统</strong> 需要读取的 ROS 专用参数（例如节点重命名、命名空间、参数文件加载等）。</li><li><strong>arguments</strong>：节点在运行时，<strong>可执行文件</strong> 需要读取的 <em>与 ROS 本身无关</em> 的普通应用级命令行参数（例如自定义配置文件路径、调试标志等）</li></ul><p>具体而言，这三个参数实际有以下区别：</p><ul><li>parameters： <ul><li><strong>节点自身</strong> 需要读取的参数，通常用于给节点传参</li><li>其支持直接定义字典（如 <code>{&quot;key&quot;: value}</code>）或指定 YAML/JSON 文件路径进行传参（更常用）；</li><li>其可通过底层自动生成 <code>--params-file</code> 参数并触发 ROS 中间件解析；</li><li>参数可通过 <code>ros2 param</code> 命令或 ROS 服务进行动态修改，且其支持类型推断（例如自动识别整数、浮点数、字符串等）。</li></ul></li><li>ros_arguments： <ul><li><strong>ROS2底层系统</strong> 需要读取的 ROS 专用参数，通常亦用于覆盖原本给节点的传参以进行调试</li><li>若在命令行中等效执行，该参数内传递值会被包装在 <code>--ros-args</code> 标志之后，使 ROS 中间件可以强制解析这些参数；</li><li>支持 ROS 参数语法（如 <code>--log-level</code>, <code>__ns</code>, <code>--remap</code> 等）。</li></ul></li><li>arguments： <ul><li><strong>可执行文件</strong> 需要读取的普通应用级命令行参数，与 ROS 本身无关</li><li>参数会被直接追加到节点命令行的末尾；</li><li>不会触发 ROS 参数解析器（<code>rclcpp::init</code>）的特殊处理。</li></ul></li></ul><p>列成表格即为如下区别：</p><table><thead><tr><th>特性</th><th>parameters</th><th>ros_arguments</th><th>arguments</th></tr></thead><tbody><tr><td><strong>作用域</strong></td><td>节点运行时自用参数</td><td>ROS2 底层系统内 ROS 中间件配置</td><td>外部环境-可执行文件 进程级命令行参数</td></tr><tr><td><strong>一般配置用途</strong></td><td>节点运行时自用算法参数、控制参数等</td><td>重映射话题、命名空间、日志级别</td><td>指定配置文件、调试模式</td></tr><tr><td><strong>动态可修改性</strong></td><td>✅ (通过 ROS 接口)</td><td>❌ (启动时固定)</td><td>❌ (启动时固定)</td></tr><tr><td><strong>典型语法</strong></td><td><code>{&quot;key&quot;: value}</code> 或 <code>params.yaml</code></td><td><code>[&quot;--remap&quot;, &quot;old:=new&quot;]</code></td><td><code>[&quot;--config&quot;, &quot;my_config.txt&quot;]</code></td></tr><tr><td><strong>底层标志</strong></td><td><code>--params-file</code></td><td><code>--ros-args</code></td><td>无特殊标志</td></tr><tr><td><strong>优先级规则</strong></td><td>低于 <code>ros_arguments</code></td><td>较高，低于ROS命令行参数</td><td>独立作用域</td></tr><tr><td><strong>实际节点传参时优先级</strong></td><td>推荐最先使用</td><td>仅在需要覆盖参数时使用</td><td>无需使用</td></tr></tbody></table><p>因此在实践中，一般建议：</p><ol><li><strong>优先使用 <code>parameters</code></strong> 管理节点运行时配置（类型安全、支持动态调整）；</li><li>仅在 <strong>需要覆盖参数时</strong> 使用 <code>ros_arguments</code>；</li><li><strong>避免在 <code>arguments</code> 中传递 ROS 相关参数</strong>（易导致解析失败）。</li></ol></div><h3 id="_2-executeprocess-ros-执行指令设置" tabindex="-1"><a class="header-anchor" href="#_2-executeprocess-ros-执行指令设置"><span>2. ExecuteProcess- ROS 执行指令设置</span></a></h3><p>在 <strong>使用 Python 实现的 launch 文件</strong> 中，为了针对 ROS2 命令等外部进程进行封装，以实现部份功能的简化调用执行，需要使用被统一封装为 <code>launch.actions.ExecuteProcess</code> 的对象，并通过 <code>LaunchDescription()</code> 函数创建特定包装对象以进行返回。</p><p>以下将会针对统一封装的 <code>ExecuteProcess</code> 对象内的参数进行逐一说明。</p><h2 id="贰、xml-实现语法" tabindex="-1"><a class="header-anchor" href="#贰、xml-实现语法"><span>贰、XML 实现语法</span></a></h2><h2 id="叁、yaml-实现语法" tabindex="-1"><a class="header-anchor" href="#叁、yaml-实现语法"><span>叁、YAML 实现语法</span></a></h2>`,14))])}const u=t(d,[["render",o]]),y=JSON.parse('{"path":"/learningNote/Ros2_Note/launch_rosbag2/2025_04_29.html","title":"ROS2-017-ROS2工具：启动文件 launch 的系统实现","lang":"zh-CN","frontmatter":{"title":"ROS2-017-ROS2工具：启动文件 launch 的系统实现","icon":"kitchen-set","date":"2025-04-29T00:00:00.000Z","category":["Computer","robot","ROS"]},"git":{"createdTime":1756261053000,"updatedTime":1756261053000,"contributors":[{"name":"Jeacson_Snake","username":"","email":"Jeacson_Snake@outlook.com","commits":1}]},"readingTime":{"minutes":4.47,"words":1340},"filePathRelative":"learningNote/Ros2_Note/launch_rosbag2/2025_04_29.md","excerpt":"<h2>简介</h2>\\n<p>有关 launch 文件的介绍，可以参考<a href=\\"/learningNote/Ros2_Note/launch_rosbag2/2025_04_28.html#%E7%AE%80%E4%BB%8B\\" target=\\"_blank\\">上一篇内容</a></p>\\n<h2>壹、Python 实现语法</h2>\\n<p>以下介绍在 Python 中 <strong>launch 文件</strong> 的相关语法：</p>\\n<h3>1. Node-节点设置</h3>\\n<p>在 <strong>使用 Python 实现的 launch 文件</strong> 中，被执行的节点需要统一封装为 <code>launch_ros.actions.Node</code> 对象，并通过 <code>LaunchDescription()</code> 函数创建特定包装对象以进行返回。以下将会针对统一封装的 <code>Node</code> 对象内的参数进行逐一说明。</p>"}');export{u as comp,y as data};
