import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as n,o as t}from"./app-CM1hd37A.js";const i="/assets/Topical_Communications-CjDgW3Lx.jpg",r="/assets/Service_Communications-Bn8ROvLr.jpg",o="/assets/Action_Communications-qj_0aSDG.jpg",p="/assets/Parameter_Service-CtMjEvWq.jpg",c={};function l(h,a){return t(),e("div",null,[...a[0]||(a[0]=[n('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>作为一种高度复杂的系统性实现，在机器人中，一个完整的机器人应用程序一般会由若干功能模块组成，其中每个功能模块可能又包含若干功能点，而不同功能模块、不同功能点之间通常需要频繁的进行数据交互。 比如以导航中的路径规划模块为例：</p><ul><li>路径规划模块需要其他功能模块将各种数据输入，并输出相应处理后的数据以便被其他模块调用；</li><li>输入的数据有地图服务提供的地图数据、定位模块提供的机器人位姿数据、人机交互模块提供的目标点数据等；</li><li>而输出的处理后的数据，即路径信息等则会被运动控制订阅或是回显在人机交互界面上。</li></ul><p>因此要在这些相对独立的功能模块或功能点之间实现数据交互，就需要ROS2提供的各种通信机制。这些通信机制的组成要素是类似的，例如：各种通信机制中的通信是双方或多方行为、通信时都需要将不同的通信对象关联、各种通信机制都有各自的模型、各种通信机制交互数据时必然涉及到数据载体等。</p><h2 id="节点与话题" tabindex="-1"><a class="header-anchor" href="#节点与话题"><span>节点与话题</span></a></h2><h3 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h3><p>在各种通信机制中，通信对象的构建会依赖于节点(Node)，在ROS2中，一般情况下每个节点都对应着单一的功能模块：</p><ul><li>雷达驱动节点用于发布雷达信息；</li><li>摄像头驱动节点用于发布图像信息；</li><li>……</li></ul><p>一个完整的机器人系统一般会由多个协同工作的节点组成，而ROS2中的单个可执行文件(例如C++程序或者Python程序)中则可以包含一个或多个节点。</p><h3 id="话题" tabindex="-1"><a class="header-anchor" href="#话题"><span>话题</span></a></h3><p>话题(Topic)是ROS2中节点之间进行<strong>异步</strong>消息通信的机制，它用于将各种具有相同话题的节点关联在一起。虽然ROS2是跨计算机语言的(例如使用C++程序或者Python程序分别实现不同的节点)，但是只要二者使用了相同的话题，就可以实现节点间的数据交互。</p><p>话题基于发布/订阅模式，一个节点可以通过话题发布消息（发布者），另一个节点可以通过订阅话题接收这些消息（订阅者）。</p><p>话题一般用于节点间的一对多或多对多通信，因为在话题中数据是持续流动的，因此话题更适合于不需要立即响应的通信场景。</p><h2 id="通信模型" tabindex="-1"><a class="header-anchor" href="#通信模型"><span>通信模型</span></a></h2><p>在ROS2中，<strong>常用的</strong>通信模型有四种：</p><ol><li>话题通信(Topics)</li><li>服务通信(Services)</li><li>动作通信(Actions)</li><li>参数服务(Parameters)</li></ol><h3 id="话题通信-topics" tabindex="-1"><a class="header-anchor" href="#话题通信-topics"><span>话题通信(Topics)</span></a></h3><p>话题通信是一种单向通信模型，在通信双方中，发布方发布数据，订阅方订阅数据，数据流单向的由发布方传输到订阅方。</p><p><img src="'+i+'" alt="图1 话题通信示意图"></p><p>因此该通信机制的特点为：<strong>单向数据流</strong></p><h3 id="服务通信-services" tabindex="-1"><a class="header-anchor" href="#服务通信-services"><span>服务通信(Services)</span></a></h3><p>服务通信是一种基于请求响应的通信模型，在通信双方中，客户端发送请求数据到服务端，服务端响应结果给客户端。</p><p><img src="'+r+'" alt="图2 服务通信示意图"></p><p>因此该通信机制的特点为：<strong>请求响应模式</strong></p><h3 id="动作通信-actions" tabindex="-1"><a class="header-anchor" href="#动作通信-actions"><span>动作通信(Actions)</span></a></h3><p>动作通信是一种带有连续反馈的通信模型，在通信双方中，客户端发送请求数据到服务端，服务端响应结果给客户端，但是在服务端接收到请求到产生最终响应的过程中，服务端会发送连续的反馈信息到客户端。</p><p><img src="'+o+'" alt="图3 动作通信示意图"></p><p>因此该通信机制的特点为：<strong>带有连续的信息反馈</strong></p><h3 id="参数服务-parameters" tabindex="-1"><a class="header-anchor" href="#参数服务-parameters"><span>参数服务(Parameters)</span></a></h3><p>参数服务是一种基于共享的通信模型，在通信双方中，服务端可以设置数据，而客户端可以连接服务端并操作服务端数据。因此该通信模型有些类似于后端向数据库作数据增删改查等的操作，在学习理解上可以如此等价。它在具体访问时一般基于服务通信的通信模型进行进阶处理。</p><p><img src="'+p+'" alt="图4 参数服务示意图"></p><p>该通信机制的特点为：<strong>数据共享</strong></p>',32)])])}const _=s(c,[["render",l]]),g=JSON.parse('{"path":"/learningNote/Ros2_Note/co_me/2024_09_18.html","title":"ROS2-002-通信机制：节点与话题、四种通信模型的记录与分析","lang":"zh-CN","frontmatter":{"title":"ROS2-002-通信机制：节点与话题、四种通信模型的记录与分析","icon":"analysis","date":"2024-09-18T00:00:00.000Z","category":["Computer","robot","ROS"]},"git":{"createdTime":1726652207000,"updatedTime":1741599203000,"contributors":[{"name":"Jeacson_Snake","username":"","email":"Jeacson_Snake@outlook.com","commits":6}]},"readingTime":{"minutes":4,"words":1201},"filePathRelative":"learningNote/Ros2_Note/co_me/2024_09_18.md","excerpt":"<h2>简介</h2>\\n<p>作为一种高度复杂的系统性实现，在机器人中，一个完整的机器人应用程序一般会由若干功能模块组成，其中每个功能模块可能又包含若干功能点，而不同功能模块、不同功能点之间通常需要频繁的进行数据交互。\\n比如以导航中的路径规划模块为例：</p>\\n<ul>\\n<li>路径规划模块需要其他功能模块将各种数据输入，并输出相应处理后的数据以便被其他模块调用；</li>\\n<li>输入的数据有地图服务提供的地图数据、定位模块提供的机器人位姿数据、人机交互模块提供的目标点数据等；</li>\\n<li>而输出的处理后的数据，即路径信息等则会被运动控制订阅或是回显在人机交互界面上。</li>\\n</ul>"}');export{_ as comp,g as data};
