import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as n,a as l,d as i,e as r,w as o,r as d,o as p}from"./app-CM1hd37A.js";const g="/assets/Interface_File_Cannot_Written_In_Python-A-XmQJ9U.jpg",h={};function m(k,s){const e=d("RouteLink");return p(),t("div",null,[s[17]||(s[17]=n("h2",{id:"简介-什么是接口-interfaces",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简介-什么是接口-interfaces"},[n("span",null,"简介：什么是接口(interfaces)？")])],-1)),s[18]||(s[18]=n("p",null,[i("在通信过程中，当节点间需要传输数据时，就必然需要以特定格式传输数据，也就是我们常用的数据载体。在ROS2中，数据载体被称之为"),n("strong",null,"接口(interfaces)"),i("。")],-1)),s[19]||(s[19]=n("h2",{id:"常用的接口文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#常用的接口文件"},[n("span",null,"常用的接口文件")])],-1)),n("p",null,[s[1]||(s[1]=i("通信时使用的数据载体一般需要使用接口文件定义。常用的接口文件有三种：",-1)),s[2]||(s[2]=n("code",null,"msg",-1)),s[3]||(s[3]=i(" 文件、",-1)),s[4]||(s[4]=n("code",null,"srv",-1)),s[5]||(s[5]=i(" 文件与 ",-1)),s[6]||(s[6]=n("code",null,"action",-1)),s[7]||(s[7]=i(" 文件，分别用于对应",-1)),r(e,{to:"/learningNote/Ros2_Note/co_me/2024_09_18.html#%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B"},{default:o(()=>[...s[0]||(s[0]=[i("前文",-1)])]),_:1}),s[8]||(s[8]=i("所述的",-1)),s[9]||(s[9]=n("strong",null,"话题通信",-1)),s[10]||(s[10]=i("、",-1)),s[11]||(s[11]=n("strong",null,"服务通信",-1)),s[12]||(s[12]=i("和",-1)),s[13]||(s[13]=n("strong",null,"动作通信",-1)),s[14]||(s[14]=i("，并且每种文件都需要按照一定格式定义 ",-1)),s[15]||(s[15]=n("em",null,"特定数据类型",-1)),s[16]||(s[16]=i("的 “变量”。",-1))]),s[20]||(s[20]=l(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>参数通信的数据无需定义接口文件，参数通信时数据会被封装为参数对象，参数客户端和服务端操作的都是参数对象。</p></div><h3 id="_1-msg文件" tabindex="-1"><a class="header-anchor" href="#_1-msg文件"><span>1. msg文件</span></a></h3><p><code>msg</code> 文件是用于定义 <strong>话题通信</strong> 中数据载体的接口文件，而一个典型的 <code>.msg</code> 文件示例如下：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// .msg</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 num1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 num2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件中声明了一些被传输的类似于 <strong>C++</strong> 变量的数据。</p><h3 id="_2-srv文件" tabindex="-1"><a class="header-anchor" href="#_2-srv文件"><span>2. srv文件</span></a></h3><p><code>srv</code> 文件是用于定义 <strong>服务通信</strong> 中数据载体的接口文件，一个典型的 <code>.srv</code> 文件示例如下：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// .srv</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 num1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 num2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 sum</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件中声明的数据被 &quot;---&quot; 分割为两部分，其中 <strong>上半部分</strong> 用于声明请求数据，<strong>下半部分</strong> 用于声明响应数据。</p><h3 id="_3-action文件" tabindex="-1"><a class="header-anchor" href="#_3-action文件"><span>3. action文件</span></a></h3><p><code>action</code> 文件是用于定义<strong>动作通信</strong>中数据载体的接口文件，一个典型的 <code>.action</code> 文件示例如下：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// .action</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 num1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 num2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">int64 sum</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">float64 progress</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件中声明的数据被 &quot;---&quot; 分割为三部分，其中 <strong>上半部分</strong> 用于声明请求数据，<strong>中间部分</strong> 用于声明响应数据，<strong>下半部分</strong> 用于声明连续反馈数据。</p><h2 id="变量类型" tabindex="-1"><a class="header-anchor" href="#变量类型"><span>变量类型</span></a></h2><p>不管是何种接口文件，在文件中每行声明的数据都由<strong>字段类型</strong>和<strong>字段名称</strong>组成，可以使用的<strong>字段类型</strong>有以下几种：</p><ul><li>int8, int16, int32, int64 (或者无符号类型: uint*)</li><li>float32, float64</li><li>string</li><li>time, duration</li><li>变长数组和定长数组</li><li>其他msg文件</li></ul><p>ROS中还有一种特殊类型：<strong>标头(Header)</strong>，它包含了时间戳和ROS2中常用的坐标帧信息。许多复杂的接口文件会在第一行包含Header标头。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这里对接口进行了简单的介绍，仅供参考与了解。并且由于直到目前为止 ROS2 还 <strong>无法</strong> 在 Python 功能包中定义接口文件，以上所有代码都基于 <code>CMAKE</code> 。如果有相应更新，请留待之后的记录文章进行讲述。 <img src="`+g+'" alt="针对“是否可以使用Python语言定义ROS2里的接口文件”的官方文档的回答：至少目前还不行(2024.Sept.19)"></p></div>',18))])}const v=a(h,[["render",m]]),A=JSON.parse('{"path":"/learningNote/Ros2_Note/co_me/2024_09_19.html","title":"ROS2-003-通信机制：接口简述与四种通信模型的适用接口文件","lang":"zh-CN","frontmatter":{"title":"ROS2-003-通信机制：接口简述与四种通信模型的适用接口文件","icon":"analysis","date":"2024-09-19T00:00:00.000Z","category":["Computer","robot","ROS"]},"git":{"createdTime":1726716431000,"updatedTime":1741599203000,"contributors":[{"name":"Jeacson_Snake","username":"","email":"Jeacson_Snake@outlook.com","commits":5}]},"readingTime":{"minutes":2.54,"words":761},"filePathRelative":"learningNote/Ros2_Note/co_me/2024_09_19.md","excerpt":"<h2>简介：什么是接口(interfaces)？</h2>\\n<p>在通信过程中，当节点间需要传输数据时，就必然需要以特定格式传输数据，也就是我们常用的数据载体。在ROS2中，数据载体被称之为<strong>接口(interfaces)</strong>。</p>\\n<h2>常用的接口文件</h2>\\n<p>通信时使用的数据载体一般需要使用接口文件定义。常用的接口文件有三种：<code>msg</code> 文件、<code>srv</code> 文件与 <code>action</code> 文件，分别用于对应<a href=\\"/learningNote/Ros2_Note/co_me/2024_09_18.html#%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B\\" target=\\"_blank\\">前文</a>所述的<strong>话题通信</strong>、<strong>服务通信</strong>和<strong>动作通信</strong>，并且每种文件都需要按照一定格式定义 <em>特定数据类型</em>的 “变量”。</p>"}');export{v as comp,A as data};
